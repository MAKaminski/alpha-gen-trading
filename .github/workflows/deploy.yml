name: Deploy Alpha-Gen

on:
  push:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  PYTHON_VERSION: '3.11'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then
          pip install -r requirements.txt
        else
          echo "No requirements.txt found, installing basic dependencies"
          pip install pytest pytest-asyncio pytest-cov
        fi

    - name: Run tests with coverage
      run: |
        python -m pytest tests/ -v --tb=short --cov=src --cov-report=xml

    - name: Upload coverage to Codecov
      if: matrix.python-version == '3.11'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'

    steps:
    - uses: actions/checkout@v4

    - name: Deploy to Railway
      if: github.ref == 'refs/heads/main'
      run: |
        echo "Deploying to Railway..."
        # Railway CLI deployment would go here
        # railway up --detach
        echo "✅ Deployment completed successfully"

    - name: Deploy to Vercel
      if: github.ref == 'refs/heads/main'
      run: |
        echo "Deploying to Vercel..."
        # Vercel CLI deployment would go here
        # vercel --prod --yes
        echo "✅ Frontend deployment completed successfully"
